{"version":3,"sources":["assets/underconstruction.png","assets/home-background.png","Containers/Home/Home.js","Containers/Home/Home.styles.js","Containers/Introduction/Introduction.js","Containers/Introduction/Introduction.styles.js","Containers/Main/Main.js","Containers/Main/Main.styles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","withStyles","theme","homeContainer","display","height","flexDirection","justifyContent","padding","color","fontSize","alignSelf","width","fontWeight","marginBottom","cursor","border","borderRadius","classes","changePageState","bg","require","useEffect","console","log","left","style","background","className","onClick","introductionContainer","right","src","underconstruction","pageToRender","mainContainer","useState","pageState","setPageState","key","Grid","container","item","xs","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fabcebf9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/underconstruction.b8dcb7ed.png\";","module.exports = __webpack_public_path__ + \"static/media/home-background.88b5562b.png\";","import React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport stylesheet from './Home.styles';\nimport Fade from 'react-reveal/Fade';\nimport ArrowRight from '@material-ui/icons/ArrowRightAlt';\nimport Slide from 'react-reveal/Slide';\n\nconst Home = ({ classes, changePageState }) => {\n  var bg = require('../../assets/home-background.png');\n\n  useEffect(() => {\n    console.log(changePageState);\n  }, [changePageState]);\n\n  return (\n    <Slide left>\n      <div\n        style={{\n          background: `${\"url(\" + bg + \")\"} no-repeat center center fixed`,\n        }}\n        className={classes.homeContainer} >\n        <div className='top'>\n          <p>\n            {'Aahad Aazar'}\n          </p>\n        </div>\n        <div className='middle'>\n          <p className='first'>\n            {`\"There is no test like production\"`}\n          </p>\n          <p className='second'>\n            {'let me turn your'}\n            <b>\n              {' ideas '}\n            </b>\n            {'into'}\n            <i>\n              {' realities'}\n            </i>\n          </p>\n        </div>\n        <div className='bottom'>\n          <div\n            onClick={() => {\n              changePageState(2)\n            }}\n            className='circularButton'>\n            <ArrowRight />\n          </div>\n        </div>\n      </div >\n    </Slide>\n  );\n};\n\n\nexport default withStyles(stylesheet)(Home);\n","export default theme => ({\n  homeContainer: {\n    display: 'flex',\n    height: 'calc(100% - 30px)',\n    // height: '100%',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: 15,\n    color: 'white',\n    '& .top': {\n      fontSize: 30,\n      alignSelf: 'flex-start',\n    },\n    '& .middle': {\n      width: 'calc(100vw - 50vw)',\n      alignSelf: 'center',\n      '& .first': {\n        fontSize: 60,\n        fontWeight: 200,\n        marginBottom: 20,\n      },\n      '& .second': {\n        fontSize: 20,\n        fontWeight: 400,\n        '& b': {\n          fontWeight: 900,\n        }\n      },\n      '@media(max-width:600px)': {\n        '& .first': {\n          fontSize: 50,\n        },\n        '& .second': {\n          fontSize: 16,\n        },\n      },\n      '@media(max-width:400px)': {\n        width: 'calc(70vw)',\n      },\n    },\n    '& .bottom': {\n      alignSelf: 'flex-end',\n      '& .circularButton': {\n        cursor: 'pointer',\n        border: '1px solid white',\n        borderRadius: 28,\n        padding: 6,\n        '& svg': {\n          fontSize: 30,\n        }\n      },\n    }\n  },\n});\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport stylesheet from './Introduction.styles';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport Slide from 'react-reveal/Slide';\nimport underconstruction from '../../assets/underconstruction.png'\n\nconst Introduction = ({ classes, changePageState }) => {\n  return (\n    <>\n      <Slide right>\n        <div\n          className={classes.introductionContainer} >\n          <div className='top'>\n            <p>\n              {'Introduction'}\n            </p>\n          </div>\n          <div className='middle'>\n            <img\n              src={underconstruction}\n            />\n            <p className='second'>\n              {'OOPS. This Page seems to be under construction!'}\n            </p>\n          </div>\n          <div className='bottom'>\n            <div\n              onClick={() => {\n                changePageState(1)\n              }}\n              className='circularButton'>\n              <KeyboardBackspaceIcon />\n            </div>\n          </div>\n        </div >\n      </Slide>\n    </>\n  );\n};\n\n\nexport default withStyles(stylesheet)(Introduction);\n","export default theme => ({\n  introductionContainer: {\n    display: 'flex',\n    background: '#00b4d8',\n    height: 'calc(100% - 30px)',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: 15,\n    color: 'white',\n    '& .top': {\n      fontSize: 30,\n      alignSelf: 'flex-end',\n    },\n    '& .middle': {\n      alignSelf: 'center',\n      '& img': {\n        width: 100,\n        marginBottom: 20,\n      },\n    },\n    '& .bottom': {\n      alignSelf: 'flex-start',\n      '& .circularButton': {\n        cursor: 'pointer',\n        border: '1px solid white',\n        borderRadius: 28,\n        padding: 6,\n        '& svg': {\n          fontSize: 30,\n        }\n      },\n    }\n  },\n});\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport stylesheet from './Main.styles';\nimport Home from '../Home/Home';\nimport Introduction from '../Introduction/Introduction';\n\nlet pageToRender = null;\n\nconst Main = ({ classes }) => {\n\n  const [pageState, setPageState] = useState(1);\n\n  const changePageState = key => {\n    setPageState(key);\n  }\n\n  switch (pageState) {\n    case 1:\n      pageToRender = (<Home\n        changePageState={changePageState}\n      />);\n      break;\n    case 2:\n      pageToRender = (<Introduction\n        changePageState={changePageState} />);\n      break;\n    default:\n      pageToRender = (<Home\n        changePageState={changePageState}\n      />);\n      break;\n  };\n\n  return (\n    <Grid\n      className={classes.mainContainer}\n      container>\n      <Grid\n        item\n        xs={12}>\n        {pageToRender}\n      </Grid>\n    </Grid>\n  );\n};\n\n\nexport default withStyles(stylesheet)(Main);\n","export default theme => ({\n  mainContainer: {\n    height: '100%',\n    padding: 10,\n  }\n});\n","import React from 'react';\nimport './App.css';\nimport Main from '../src/Containers/Main/Main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}